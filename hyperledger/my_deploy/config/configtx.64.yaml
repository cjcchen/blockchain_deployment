# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

---
################################################################################
#
#   Section: Organizations
#
#   - This section defines the different organizational identities which will
#   be referenced later in the configuration.
#
################################################################################
Organizations:

    # SampleOrg defines an MSP using the sampleconfig.  It should never be used
    # in production but may be used as a template for other definitions
    - &OrdererOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: OrdererOrg

        # ID to load the MSP definition as
        ID: OrdererMSP

        # MSPDir is the filesystem path which contains the MSP configuration
        MSPDir: ../certs/ordererOrganizations/example.com/msp

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('OrdererMSP.admin')"

        OrdererEndpoints:
            - orderer0.example.com:7050
            - orderer1.example.com:7050
            - orderer2.example.com:7050
            - orderer3.example.com:7050
            - orderer4.example.com:7050
            - orderer5.example.com:7050
            - orderer6.example.com:7050
            - orderer7.example.com:7050
            - orderer8.example.com:7050
            - orderer9.example.com:7050
            - orderer10.example.com:7050
            - orderer11.example.com:7050
            - orderer12.example.com:7050
            - orderer13.example.com:7050
            - orderer14.example.com:7050
            - orderer15.example.com:7050
            - orderer16.example.com:7050
            - orderer17.example.com:7050
            - orderer18.example.com:7050
            - orderer19.example.com:7050
            - orderer20.example.com:7050
            - orderer21.example.com:7050
            - orderer22.example.com:7050
            - orderer23.example.com:7050
            - orderer24.example.com:7050
            - orderer25.example.com:7050
            - orderer26.example.com:7050
            - orderer27.example.com:7050
            - orderer28.example.com:7050
            - orderer29.example.com:7050
            - orderer30.example.com:7050
            - orderer31.example.com:7050
            - orderer32.example.com:7050
            - orderer33.example.com:7050
            - orderer34.example.com:7050
            - orderer35.example.com:7050
            - orderer36.example.com:7050
            - orderer37.example.com:7050
            - orderer38.example.com:7050
            - orderer39.example.com:7050
            - orderer40.example.com:7050
            - orderer41.example.com:7050
            - orderer42.example.com:7050
            - orderer43.example.com:7050
            - orderer44.example.com:7050
            - orderer45.example.com:7050
            - orderer46.example.com:7050
            - orderer47.example.com:7050
            - orderer48.example.com:7050
            - orderer49.example.com:7050
            - orderer50.example.com:7050
            - orderer51.example.com:7050
            - orderer52.example.com:7050
            - orderer53.example.com:7050
            - orderer54.example.com:7050
            - orderer55.example.com:7050
            - orderer56.example.com:7050
            - orderer57.example.com:7050
            - orderer58.example.com:7050
            - orderer59.example.com:7050
            - orderer60.example.com:7050
            - orderer61.example.com:7050
            - orderer62.example.com:7050
            - orderer63.example.com:7050

    - &Org1
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: Org1MSP

        # ID to load the MSP definition as
        ID: Org1MSP

        MSPDir: ../certs/peerOrganizations/org1.example.com/msp

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('Org1MSP.admin', 'Org1MSP.peer', 'Org1MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('Org1MSP.admin', 'Org1MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('Org1MSP.admin')"
            Endorsement:
                Type: Signature
                Rule: "OR('Org1MSP.peer')"
        AnchorPeers:
            - Host: peer0.org1.example.com
              Port: 7051

################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.
    # Set the value of the capability to true to require it.
    Channel: &ChannelCapabilities
        # V2_0 capability ensures that orderers and peers behave according
        # to v2.0 channel capabilities. Orderers and peers from
        # prior releases would behave in an incompatible way, and are therefore
        # not able to participate in channels at v2.0 capability.
        # Prior to enabling V2.0 channel capabilities, ensure that all
        # orderers and peers on a channel are at v2.0.0 or later.
        V2_0: true

    # Orderer capabilities apply only to the orderers, and may be safely
    # used with prior release peers.
    # Set the value of the capability to true to require it.
    Orderer: &OrdererCapabilities
        # V2_0 orderer capability ensures that orderers behave according
        # to v2.0 orderer capabilities. Orderers from
        # prior releases would behave in an incompatible way, and are therefore
        # not able to participate in channels at v2.0 orderer capability.
        # Prior to enabling V2.0 orderer capabilities, ensure that all
        # orderers on channel are at v2.0.0 or later.
        V2_0: true

    # Application capabilities apply only to the peer network, and may be safely
    # used with prior release orderers.
    # Set the value of the capability to true to require it.
    Application: &ApplicationCapabilities
        # V2_0 application capability ensures that peers behave according
        # to v2.0 application capabilities. Peers from
        # prior releases would behave in an incompatible way, and are therefore
        # not able to participate in channels at v2.0 application capability.
        # Prior to enabling V2.0 application capabilities, ensure that all
        # peers on channel are at v2.0.0 or later.
        V2_0: true

################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults

    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Application policies, their canonical path is
    #   /Channel/Application/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        LifecycleEndorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"
        Endorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"

    Capabilities:
        <<: *ApplicationCapabilities
################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start
    OrdererType: etcdraft
    # Addresses used to be the list of orderer addresses that clients and peers
    # could connect to.  However, this does not allow clients to associate orderer
    # addresses and orderer organizations which can be useful for things such
    # as TLS validation.  The preferred way to specify orderer addresses is now
    # to include the OrdererEndpoints item in your org definition
    Addresses:
        - orderer0.example.com:7050
        - orderer1.example.com:7050
        - orderer2.example.com:7050
        - orderer3.example.com:7050
        - orderer4.example.com:7050
        - orderer5.example.com:7050
        - orderer6.example.com:7050
        - orderer7.example.com:7050
        - orderer8.example.com:7050
        - orderer9.example.com:7050
        - orderer10.example.com:7050
        - orderer11.example.com:7050
        - orderer12.example.com:7050
        - orderer13.example.com:7050
        - orderer14.example.com:7050
        - orderer15.example.com:7050
        - orderer16.example.com:7050
        - orderer17.example.com:7050
        - orderer18.example.com:7050
        - orderer19.example.com:7050
        - orderer20.example.com:7050
        - orderer21.example.com:7050
        - orderer22.example.com:7050
        - orderer23.example.com:7050
        - orderer24.example.com:7050
        - orderer25.example.com:7050
        - orderer26.example.com:7050
        - orderer27.example.com:7050
        - orderer28.example.com:7050
        - orderer29.example.com:7050
        - orderer30.example.com:7050
        - orderer31.example.com:7050
        - orderer32.example.com:7050
        - orderer33.example.com:7050
        - orderer34.example.com:7050
        - orderer35.example.com:7050
        - orderer36.example.com:7050
        - orderer37.example.com:7050
        - orderer38.example.com:7050
        - orderer39.example.com:7050
        - orderer40.example.com:7050
        - orderer41.example.com:7050
        - orderer42.example.com:7050
        - orderer43.example.com:7050
        - orderer44.example.com:7050
        - orderer45.example.com:7050
        - orderer46.example.com:7050
        - orderer47.example.com:7050
        - orderer48.example.com:7050
        - orderer49.example.com:7050
        - orderer50.example.com:7050
        - orderer51.example.com:7050
        - orderer52.example.com:7050
        - orderer53.example.com:7050
        - orderer54.example.com:7050
        - orderer55.example.com:7050
        - orderer56.example.com:7050
        - orderer57.example.com:7050
        - orderer58.example.com:7050
        - orderer59.example.com:7050
        - orderer60.example.com:7050
        - orderer61.example.com:7050
        - orderer62.example.com:7050
        - orderer63.example.com:7050

   
    EtcdRaft:
        Consenters:
        - Host: orderer0.example.com
          Port: 7050
          ClientTLSCert: ../orderer0.example.com/tls/server.crt
          ServerTLSCert: ../orderer0.example.com/tls/server.crt

        - Host: orderer1.example.com
          Port: 7050
          ClientTLSCert: ../orderer1.example.com/tls/server.crt
          ServerTLSCert: ../orderer1.example.com/tls/server.crt

        - Host: orderer2.example.com
          Port: 7050
          ClientTLSCert: ../orderer2.example.com/tls/server.crt
          ServerTLSCert: ../orderer2.example.com/tls/server.crt

        - Host: orderer3.example.com
          Port: 7050
          ClientTLSCert: ../orderer3.example.com/tls/server.crt
          ServerTLSCert: ../orderer3.example.com/tls/server.crt

        - Host: orderer4.example.com
          Port: 7050
          ClientTLSCert: ../orderer4.example.com/tls/server.crt
          ServerTLSCert: ../orderer4.example.com/tls/server.crt

        - Host: orderer5.example.com
          Port: 7050
          ClientTLSCert: ../orderer5.example.com/tls/server.crt
          ServerTLSCert: ../orderer5.example.com/tls/server.crt

        - Host: orderer6.example.com
          Port: 7050
          ClientTLSCert: ../orderer6.example.com/tls/server.crt
          ServerTLSCert: ../orderer6.example.com/tls/server.crt

        - Host: orderer7.example.com
          Port: 7050
          ClientTLSCert: ../orderer7.example.com/tls/server.crt
          ServerTLSCert: ../orderer7.example.com/tls/server.crt

        - Host: orderer8.example.com
          Port: 7050
          ClientTLSCert: ../orderer8.example.com/tls/server.crt
          ServerTLSCert: ../orderer8.example.com/tls/server.crt

        - Host: orderer9.example.com
          Port: 7050
          ClientTLSCert: ../orderer9.example.com/tls/server.crt
          ServerTLSCert: ../orderer9.example.com/tls/server.crt

        - Host: orderer10.example.com
          Port: 7050
          ClientTLSCert: ../orderer10.example.com/tls/server.crt
          ServerTLSCert: ../orderer10.example.com/tls/server.crt

        - Host: orderer11.example.com
          Port: 7050
          ClientTLSCert: ../orderer11.example.com/tls/server.crt
          ServerTLSCert: ../orderer11.example.com/tls/server.crt

        - Host: orderer12.example.com
          Port: 7050
          ClientTLSCert: ../orderer12.example.com/tls/server.crt
          ServerTLSCert: ../orderer12.example.com/tls/server.crt

        - Host: orderer13.example.com
          Port: 7050
          ClientTLSCert: ../orderer13.example.com/tls/server.crt
          ServerTLSCert: ../orderer13.example.com/tls/server.crt

        - Host: orderer14.example.com
          Port: 7050
          ClientTLSCert: ../orderer14.example.com/tls/server.crt
          ServerTLSCert: ../orderer14.example.com/tls/server.crt

        - Host: orderer15.example.com
          Port: 7050
          ClientTLSCert: ../orderer15.example.com/tls/server.crt
          ServerTLSCert: ../orderer15.example.com/tls/server.crt

        - Host: orderer16.example.com
          Port: 7050
          ClientTLSCert: ../orderer16.example.com/tls/server.crt
          ServerTLSCert: ../orderer16.example.com/tls/server.crt

        - Host: orderer17.example.com
          Port: 7050
          ClientTLSCert: ../orderer17.example.com/tls/server.crt
          ServerTLSCert: ../orderer17.example.com/tls/server.crt

        - Host: orderer18.example.com
          Port: 7050
          ClientTLSCert: ../orderer18.example.com/tls/server.crt
          ServerTLSCert: ../orderer18.example.com/tls/server.crt

        - Host: orderer19.example.com
          Port: 7050
          ClientTLSCert: ../orderer19.example.com/tls/server.crt
          ServerTLSCert: ../orderer19.example.com/tls/server.crt

        - Host: orderer20.example.com
          Port: 7050
          ClientTLSCert: ../orderer20.example.com/tls/server.crt
          ServerTLSCert: ../orderer20.example.com/tls/server.crt

        - Host: orderer21.example.com
          Port: 7050
          ClientTLSCert: ../orderer21.example.com/tls/server.crt
          ServerTLSCert: ../orderer21.example.com/tls/server.crt

        - Host: orderer22.example.com
          Port: 7050
          ClientTLSCert: ../orderer22.example.com/tls/server.crt
          ServerTLSCert: ../orderer22.example.com/tls/server.crt

        - Host: orderer23.example.com
          Port: 7050
          ClientTLSCert: ../orderer23.example.com/tls/server.crt
          ServerTLSCert: ../orderer23.example.com/tls/server.crt

        - Host: orderer24.example.com
          Port: 7050
          ClientTLSCert: ../orderer24.example.com/tls/server.crt
          ServerTLSCert: ../orderer24.example.com/tls/server.crt

        - Host: orderer25.example.com
          Port: 7050
          ClientTLSCert: ../orderer25.example.com/tls/server.crt
          ServerTLSCert: ../orderer25.example.com/tls/server.crt

        - Host: orderer26.example.com
          Port: 7050
          ClientTLSCert: ../orderer26.example.com/tls/server.crt
          ServerTLSCert: ../orderer26.example.com/tls/server.crt

        - Host: orderer27.example.com
          Port: 7050
          ClientTLSCert: ../orderer27.example.com/tls/server.crt
          ServerTLSCert: ../orderer27.example.com/tls/server.crt

        - Host: orderer28.example.com
          Port: 7050
          ClientTLSCert: ../orderer28.example.com/tls/server.crt
          ServerTLSCert: ../orderer28.example.com/tls/server.crt

        - Host: orderer29.example.com
          Port: 7050
          ClientTLSCert: ../orderer29.example.com/tls/server.crt
          ServerTLSCert: ../orderer29.example.com/tls/server.crt

        - Host: orderer30.example.com
          Port: 7050
          ClientTLSCert: ../orderer30.example.com/tls/server.crt
          ServerTLSCert: ../orderer30.example.com/tls/server.crt

        - Host: orderer31.example.com
          Port: 7050
          ClientTLSCert: ../orderer31.example.com/tls/server.crt
          ServerTLSCert: ../orderer31.example.com/tls/server.crt

        - Host: orderer32.example.com
          Port: 7050
          ClientTLSCert: ../orderer32.example.com/tls/server.crt
          ServerTLSCert: ../orderer32.example.com/tls/server.crt

        - Host: orderer33.example.com
          Port: 7050
          ClientTLSCert: ../orderer33.example.com/tls/server.crt
          ServerTLSCert: ../orderer33.example.com/tls/server.crt

        - Host: orderer34.example.com
          Port: 7050
          ClientTLSCert: ../orderer34.example.com/tls/server.crt
          ServerTLSCert: ../orderer34.example.com/tls/server.crt

        - Host: orderer35.example.com
          Port: 7050
          ClientTLSCert: ../orderer35.example.com/tls/server.crt
          ServerTLSCert: ../orderer35.example.com/tls/server.crt

        - Host: orderer36.example.com
          Port: 7050
          ClientTLSCert: ../orderer36.example.com/tls/server.crt
          ServerTLSCert: ../orderer36.example.com/tls/server.crt

        - Host: orderer37.example.com
          Port: 7050
          ClientTLSCert: ../orderer37.example.com/tls/server.crt
          ServerTLSCert: ../orderer37.example.com/tls/server.crt

        - Host: orderer38.example.com
          Port: 7050
          ClientTLSCert: ../orderer38.example.com/tls/server.crt
          ServerTLSCert: ../orderer38.example.com/tls/server.crt

        - Host: orderer39.example.com
          Port: 7050
          ClientTLSCert: ../orderer39.example.com/tls/server.crt
          ServerTLSCert: ../orderer39.example.com/tls/server.crt

        - Host: orderer40.example.com
          Port: 7050
          ClientTLSCert: ../orderer40.example.com/tls/server.crt
          ServerTLSCert: ../orderer40.example.com/tls/server.crt

        - Host: orderer41.example.com
          Port: 7050
          ClientTLSCert: ../orderer41.example.com/tls/server.crt
          ServerTLSCert: ../orderer41.example.com/tls/server.crt

        - Host: orderer42.example.com
          Port: 7050
          ClientTLSCert: ../orderer42.example.com/tls/server.crt
          ServerTLSCert: ../orderer42.example.com/tls/server.crt

        - Host: orderer43.example.com
          Port: 7050
          ClientTLSCert: ../orderer43.example.com/tls/server.crt
          ServerTLSCert: ../orderer43.example.com/tls/server.crt

        - Host: orderer44.example.com
          Port: 7050
          ClientTLSCert: ../orderer44.example.com/tls/server.crt
          ServerTLSCert: ../orderer44.example.com/tls/server.crt

        - Host: orderer45.example.com
          Port: 7050
          ClientTLSCert: ../orderer45.example.com/tls/server.crt
          ServerTLSCert: ../orderer45.example.com/tls/server.crt

        - Host: orderer46.example.com
          Port: 7050
          ClientTLSCert: ../orderer46.example.com/tls/server.crt
          ServerTLSCert: ../orderer46.example.com/tls/server.crt

        - Host: orderer47.example.com
          Port: 7050
          ClientTLSCert: ../orderer47.example.com/tls/server.crt
          ServerTLSCert: ../orderer47.example.com/tls/server.crt

        - Host: orderer48.example.com
          Port: 7050
          ClientTLSCert: ../orderer48.example.com/tls/server.crt
          ServerTLSCert: ../orderer48.example.com/tls/server.crt

        - Host: orderer49.example.com
          Port: 7050
          ClientTLSCert: ../orderer49.example.com/tls/server.crt
          ServerTLSCert: ../orderer49.example.com/tls/server.crt

        - Host: orderer50.example.com
          Port: 7050
          ClientTLSCert: ../orderer50.example.com/tls/server.crt
          ServerTLSCert: ../orderer50.example.com/tls/server.crt

        - Host: orderer51.example.com
          Port: 7050
          ClientTLSCert: ../orderer51.example.com/tls/server.crt
          ServerTLSCert: ../orderer51.example.com/tls/server.crt

        - Host: orderer52.example.com
          Port: 7050
          ClientTLSCert: ../orderer52.example.com/tls/server.crt
          ServerTLSCert: ../orderer52.example.com/tls/server.crt

        - Host: orderer53.example.com
          Port: 7050
          ClientTLSCert: ../orderer53.example.com/tls/server.crt
          ServerTLSCert: ../orderer53.example.com/tls/server.crt

        - Host: orderer54.example.com
          Port: 7050
          ClientTLSCert: ../orderer54.example.com/tls/server.crt
          ServerTLSCert: ../orderer54.example.com/tls/server.crt

        - Host: orderer55.example.com
          Port: 7050
          ClientTLSCert: ../orderer55.example.com/tls/server.crt
          ServerTLSCert: ../orderer55.example.com/tls/server.crt

        - Host: orderer56.example.com
          Port: 7050
          ClientTLSCert: ../orderer56.example.com/tls/server.crt
          ServerTLSCert: ../orderer56.example.com/tls/server.crt

        - Host: orderer57.example.com
          Port: 7050
          ClientTLSCert: ../orderer57.example.com/tls/server.crt
          ServerTLSCert: ../orderer57.example.com/tls/server.crt

        - Host: orderer58.example.com
          Port: 7050
          ClientTLSCert: ../orderer58.example.com/tls/server.crt
          ServerTLSCert: ../orderer58.example.com/tls/server.crt

        - Host: orderer59.example.com
          Port: 7050
          ClientTLSCert: ../orderer59.example.com/tls/server.crt
          ServerTLSCert: ../orderer59.example.com/tls/server.crt

        - Host: orderer60.example.com
          Port: 7050
          ClientTLSCert: ../orderer60.example.com/tls/server.crt
          ServerTLSCert: ../orderer60.example.com/tls/server.crt

        - Host: orderer61.example.com
          Port: 7050
          ClientTLSCert: ../orderer61.example.com/tls/server.crt
          ServerTLSCert: ../orderer61.example.com/tls/server.crt

        - Host: orderer62.example.com
          Port: 7050
          ClientTLSCert: ../orderer62.example.com/tls/server.crt
          ServerTLSCert: ../orderer62.example.com/tls/server.crt

        - Host: orderer63.example.com
          Port: 7050
          ClientTLSCert: ../orderer63.example.com/tls/server.crt
          ServerTLSCert: ../orderer63.example.com/tls/server.crt


    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 2s

    # Batch Size: Controls the number of messages batched into a block
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 100

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 99 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB

    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Orderer policies, their canonical path is
    #   /Channel/Orderer/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        # BlockValidation specifies what signatures must be included in the block
        # from the orderer for the peer to validate it.
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults
    # Policies defines the set of policies at this level of the config tree
    # For Channel policies, their canonical path is
    #   /Channel/<PolicyName>
    Policies:
        # Who may invoke the 'Deliver' API
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        # Who may invoke the 'Broadcast' API
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        # By default, who may modify elements at this config level
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

    # Capabilities describes the channel level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ChannelCapabilities

################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
################################################################################
Profiles:

    TwoOrgsApplicationGenesis:
        <<: *ChannelDefaults
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                - *OrdererOrg
            Capabilities: *OrdererCapabilities
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Org1
            Capabilities: *ApplicationCapabilities


    TwoOrgsChannel:
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Org1
